These are some notes on the structure of the command database.

pseudo-schema/
├── can-affect
│   ├── filesystem
│   └── other-processes
├── component-command-info: Additional metadata for the component commands.
│   ├── bash-types: Associates each command to the output of `type -t $COMMAND` in bash.
│   │   └── $COMMAND: Each pair maps to one of "alias", "keyword", "function", "builtin", or "file". May be different in other shells, e.g. which is a "builtin" in zsh but a "file" in bash.
│   ├── debian: Information specific to the Debian distribution.
│   │   ├── executable-path: The full path to the binary.
│   │   │   └── $COMMAND: Often in e.g. /bin/ or /usr/bin/.
│   │   └── required-packages: the Debian package(s) required to install the relevant command.
│   │       └── $COMMAND
│   └── requirements: Useful for figuring out why a command doesn't work.
│       └── $COMMAND: These must be per-command.
│           ├── authentication
│           ├── internet-connection: Does the command require an active internet connection?
│           └── sudo: Does the command require root priveleges?
├── component-commands: List of the individual commands that make up the composite command.
├── description: Textual description of what the command does. Need not be unique.
│   ├── bytes: The length of the description string in bytes.
│   ├── sha1hex: The SHA1 cryptographic hash of the description string; useful instead of a primary key for linking to related commands.
│   └── string: The actual text of the description.
├── invocations: The actual command that gets run, indexed by shell. All invocations must have the same component commands.
│   └── $INVOCATION: Name of the shell (e.g. bash) or class of shells (e.g. POSIX) that the command works in.
│       ├── bytes: Length of command string in bytes.
│       ├── changeable-arguments: Adjustable parameters of the command or commands; may be nested.
│       │   └── $ARG: The actual text of the argument; a subset of $SHELL/string.
│       │       ├── component-command: The argument is passed to this command.
│       │       ├── component-command-flag: The argument is passed via this flag; may be null.
│       │       ├── description-string: Description of the argument.
│       │       ├── invocation-slice: Position of the argument in $SHELL/string that can be accessed by slice notation.
│       │       ├── subtype: More refined type, e.g. type is string, subtype is absolute path.
│       │       └── type: The base type of the argument e.g. integer, float, string, boolean. Useful since e.g. JSON does not distinguish floats and integers.
│       ├── compatible-shells: List of shells that the command will run correctly on.
│       ├── example-outputs: If the output is short and provides insight into what the command does, it is useful to know.
│       ├── incompatible-shells: Disjoint set of compatible-shells. Options are not explicitly enumerated because there are many, many shells.
│       ├── related-invocations: SHA1 hashes of invocations for different commands that are related to this invocation. A kind of hyper-linking.
│       ├── sha1hex: The SHA1 cryptographic hash of the command string; useful for linking to related commands.
│       └── string: Actual string that could be passed to the shell and executed.
├── related-commands: SHA1 hashes of the descriptions of other commands that are related to this one, e.g. a command that accomplishes the same thing with different component commands.
└── relevant-urls: A list of URLs that discuss the command or an equivalent command with the same component commands.

DONE: combine debian-paths and debian-packages into single debian tree.
TODO: in "component-command-debian-packages", should builtins map to "null" or simply not be included?
DONE: combine "component-command-*" into "component-command-info/*"
TODO: add fields for how to kill component commands, e.g. Ctrl-C (SIGTERM), Ctrl-D, SIGQUIT, etc. (e.g. ed, telnet, ssh Enter~., vim is :wq, emacs is C-x C-c, ed is q<Enter>)
